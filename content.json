[{"title":"日常String、Number、Array、Math和Json方法","date":"2017-04-20T14:36:36.000Z","path":"2017/04/20/日常String、Number、Array、Math和Json方法/","text":"前端日常使用的方法有很多种，为了方便使用和查询，整理如下 字符串方法1234567891011121314String.length() 返回字符串的长度String.charAt() 返回字符串中指定位置的字符String.charCodeAt() 返回指定位置的字符的Unicode 编码String.indexOf() 返回指定值在调用该方法的字符串中首次出现的位置String.lastIndexOf() 返回指定值在调用该方法的字符串中最后出现的位置String.slice() 提取字符串中的一部分，并返回这个新的字符串String.split() 通过一个指定的字符串分隔符，把原字符串分割成一个数组String.substring() 截取指定位置之间的字符串String.substr() 截取指定起始位置和长度的子字符串String.toLowerCase() 把字符串全部转成小写String.toUpperCase() 把字符串全部转成大写String.trim() 去掉字符串首尾的全部空格str.repeat(num) 将str复制几分并返回，num代表复制的次数。str.includes() 参数：1、要查找的字符串2、起始位置返回布尔值 注意 slice(),substr(),substring()方法的不同三种方法都是返回被操作字符串的子字符串，都接受一或者两个参数，第一个参数指定子字符串的开始位置，第二个参数在指定的情况下表示子字符串在哪里结束。具体来说，slice()和substring()的第二个参数指定的是子字符串最后一个字符后面的位置，而==substr() 的第二个参数指定的是返回的字符个数== 数组方法1234567891011121314151617181920212223242526272829303132arr.every(fun) 检测数值元素的每个元素是否都符合条件。arr.filter(fun) 检测数值元素，并返回符合条件所有元素的数组。arr.map(fun) 让数组的每一项都执行一次给定的函数,返回值是数组arr.forEach(fun) 让数组的每一项都执行一次给定的函数arr.some(fun) 检测数组元素中是否有元素符合指定条件。arr.sort(fun) 对数组的元素进行排序arr.push() 添加一个或多个元素到数组的末尾arr.unshift() 添加一个或多个元素到数组的头部arr.pop() 删除数组最后一项元素arr.shift() 删除数组第一个元素arr.concat(arr) 将传入的数组或非数组值与原数组合并,组成一个新的数组并返回arr.reverse() 颠倒数组中元素的位置arr.join(str) 用于把数组中的所有元素通过指定的分隔符进行分隔,放入字符串。arr.slice(num) 截取数组中一部分，并返回这个新的数组arr.splice(num) 用新元素替换旧元素以此修改数组的内容，3个参数，2个参数代表删除arr.toString() 把数组转换为字符串，并返回结果。arr.valueOf() 返回数组对象的原始值。arr.indexOf（） 参数在数组中的下标，返回值为number；-1代表数组中没有这个参数arr.from() 用于将类数组对象转为真正的数组arr.of() 用于将一组参数，转换为数组。 Arr.sort(function(a,b)&#123; //return a - b (从小到大)； //return b - a（从大到小） &#125;) 数组（json）随机排序： Arr.sort(function() &#123; return 0.5 - Math.random(); &#125;)（随机排序） //获取数组元素最小值和最大值 Math.min.apply(null,arr)； Math.max.apply(null,arr)； Math方法1234567891011Math.ceil() 对数进行向上取整Math.floor() 对数进行向下取整Math.round() 对数进行四舍五入Math.abs() 取数的绝对值Math.random() 取0-1之间的随机数，不包含1Math.min() 取（）里面的最小值Math.pow(a,b) a的b次方Math.pow(a,1/b) a的开b次方Math.sqrt(a) a的开方Math.sign() 判断一个数字是正数，负数还是零Math.hypot(...values) 返回所有参数的平方和的平方根(勾股定理) json操作方法12JSON.parse(str); 由JSON字符串转换为JSON对象JSON.stringify(obj); 将JSON对象转化为JSON字符","tags":[{"name":"string","slug":"string","permalink":"https://angeljie889.github.io/tags/string/"},{"name":"number","slug":"number","permalink":"https://angeljie889.github.io/tags/number/"},{"name":"array","slug":"array","permalink":"https://angeljie889.github.io/tags/array/"},{"name":"Math","slug":"Math","permalink":"https://angeljie889.github.io/tags/Math/"}]},{"title":"Hello World","date":"2017-04-19T15:34:40.274Z","path":"2017/04/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]